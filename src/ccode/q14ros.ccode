
//ROS OPERATORS:
//SELECT:
	// This should probably be taking the projection, but I don't
	//seem to need it now that column names are unique
	ROSAM* lp_AM5 = new ROSAM("D10_custkey.ros", 1);
	Operator* lp_ROS5 = new IntDataSource(lp_AM5, false, true);
	( (DataSource*) lp_ROS5)->setPredicate(new Predicate((Predicate::PredicateType) 0));
	( (DataSource*) lp_ROS5)->changeRHSBinding(10);
//SELECT:
	// This should probably be taking the projection, but I don't
	//seem to need it now that column names are unique
	ROSAM* lp_AM6 = new ROSAM("D10_nationkey.ros", 1);
	Operator* lp_ROS6 = new IntDataSource(lp_AM6, false, true);
	( (DataSource*) lp_ROS6)->setPredicate(new Predicate((Predicate::PredicateType) 2));
	( (DataSource*) lp_ROS6)->changeRHSBinding(4);
//OPERATOR: BOrOperator
	Operator* lp_ROS4 = new PosOrOperator(lp_ROS5, 0, lp_ROS6, 0);
//COPY:
	Operator* lp_ROS3 = new BCopyOperator(lp_ROS4,  0, 2);
//PROJECT:
//SELECT:
	// This should probably be taking the projection, but I don't
	//seem to need it now that column names are unique
	ROSAM* lp_AM7 = new ROSAM("D10_custkey.ros", 1);
	Operator* lp_ROS7 = new IntDataSource(lp_AM7, false, true);
	((DataSource*) lp_ROS7)->setPositionFilter(lp_ROS3, 0);

//ROS OPERATORS:
//PROJECT:
//SELECT:
	// This should probably be taking the projection, but I don't
	//seem to need it now that column names are unique
	ROSAM* lp_AM9 = new ROSAM("D10_nationkey.ros", 1);
	Operator* lp_ROS9 = new IntDataSource(lp_AM9, false, true);
	((DataSource*) lp_ROS9)->setPositionFilter(lp_ROS3, 1);

//OUPUT THE RESULTS:
	Operator* srcs[2] = {lp_ROS7, lp_ROS9};
	int numColumns[2] = {1, 1};
	BlockPrinter* bPrint = new BlockPrinter(srcs, numColumns, 2, "QueryX.out");
	bPrint->printColumns();
