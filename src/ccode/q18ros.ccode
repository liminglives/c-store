
//ROS OPERATORS:
//SELECT:
	// This should probably be taking the projection, but I don't
	//seem to need it now that column names are unique
	ROSAM* lp_AM4 = CatalogInstance::getCatalog()->getROSAM("D8_custkey");
	Operator* lp_ROS4 = new IntDataSource(lp_AM4, false, true);
	//((IntDataSource*) lp_ROS4)->setSingles(true);
//SELECT:
	// This should probably be taking the projection, but I don't
	//seem to need it now that column names are unique
	ROSAM* lp_AM6 = CatalogInstance::getCatalog()->getROSAM("D10_custkey");
	Operator* lp_ROS6 = new IntDataSource(lp_AM6, false, true);
	//((IntDataSource*) lp_ROS6)->setSingles(true);
	( (DataSource*) lp_ROS6)->setPredicate(new Predicate((Predicate::PredicateType) 3));
	( (DataSource*) lp_ROS6)->changeRHSBinding(1499998);
//JOINS
	Operator* lpRosRos = new NLJoin(lp_ROS4, 0,  lp_ROS6, 0);
//SELECT:
	// This should probably be taking the projection, but I don't
	//seem to need it now that column names are unique
	ROSAM* lp_AM8 = CatalogInstance::getCatalog()->getROSAM("D8_orderdate");
	Operator* lp_ROS8 = new IntDataSource(lp_AM8, false, true);
	//((IntDataSource*) lp_ROS8)->setSingles(true);
//UNION level 1:
	((DataSource*) lp_ROS8)->setPositionFilter(lpRosRos, 0);
//ROS OPERATORS:
//SELECT:
	// This should probably be taking the projection, but I don't
	//seem to need it now that column names are unique
	ROSAM* lp_AM11 = CatalogInstance::getCatalog()->getROSAM("D10_nationkey");
	Operator* lp_ROS11 = new IntDataSource(lp_AM11, false, true);
	//((IntDataSource*) lp_ROS11)->setSingles(true);
//UNION level 1:
	((DataSource*) lp_ROS11)->setPositionFilter(lpRosRos, 1);

//OUPUT THE RESULTS:
	Operator* srcs[2] = {lp_ROS8, lp_ROS11};
	int numColumns[2] = {1, 1};
	BlockPrinter* bPrint = new BlockPrinter(srcs, numColumns, 2, "QueryX.out");
	bPrint->printColumns();
