
//ROS OPERATORS:
//SELECT:
	// This should probably be taking the projection, but I don't
	//seem to need it now that column names are unique
	ROSAM* lp_AM4 = new ROSAM( "Q1_l_shipdate.ros" , 2);
	Operator* lp_ROS4 = new RLEDataSource(lp_AM4, true);
	( (DataSource*) lp_ROS4)->setPredicate(new Predicate((Predicate::PredicateType) 4));
	( (DataSource*) lp_ROS4)->changeRHSBinding(9000);
//SELECT:
	// This should probably be taking the projection, but I don't
	//seem to need it now that column names are unique
	ROSAM* lp_AM5 = new ROSAM( "Q1_l_shipdate.ros" , 2);
	Operator* lp_ROS5 = new RLEDataSource(lp_AM5, true);
	( (DataSource*) lp_ROS5)->setPredicate(new Predicate((Predicate::PredicateType) 0));
	( (DataSource*) lp_ROS5)->changeRHSBinding(9005);
//OPERATOR: BAndOperator
	Operator* lp_ROS3 = new PosAndOperator(lp_ROS4, 0, lp_ROS5, 0);
//PROJECT:
//SELECT:
	// This should probably be taking the projection, but I don't
	//seem to need it now that column names are unique
	ROSAM* lp_AM6 = new ROSAM( "Q1_l_shipdate.ros" , 2);
	Operator* lp_ROS6 = new RLEDataSource(lp_AM6, true);
	((DataSource*) lp_ROS6)->setPositionFilter(lp_ROS3, 0);

//OUPUT THE RESULTS:
	Operator* srcs[1] = {lp_ROS6};
	int numColumns[1] = {1};
	BlockPrinter* bPrint = new BlockPrinter(srcs, numColumns, 1, "QueryX.out");
	bPrint->printColumns();
